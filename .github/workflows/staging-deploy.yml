name: Deploy to Staging

on:
  push:
    branches: [ staging ]
  workflow_dispatch:

concurrency:
  group: staging-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  DATABASE_URL: ${{ secrets.STAGING_DATABASE_URL }}
  VITE_API_BASE_URL: https://jungle-tours-backend-staging.fly.dev

jobs:
  # 🚀 Deploy Backend to Fly.io Staging
  deploy-backend-staging:
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build backend
        run: npm run build

      - name: 🚀 Deploy to Fly.io Staging
        uses: superfly/flyctl-actions@1.4
        with:
          args: "deploy --app jungle-tours-backend-staging --remote-only"

  # 🌐 Deploy Frontend to Hostinger Staging Subdomain
  deploy-frontend-staging:
    runs-on: ubuntu-latest
    needs: deploy-backend-staging

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build frontend for staging
        run: npm run build:client:prod
        env:
          NODE_ENV: production
          VITE_API_BASE_URL: ${{ env.VITE_API_BASE_URL }}

      - name: 📤 Deploy to Hostinger Staging via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.HOSTINGER_FTP_HOST }}
          username: ${{ secrets.HOSTINGER_FTP_USERNAME }}
          password: ${{ secrets.HOSTINGER_FTP_PASSWORD }}
          local-dir: ./dist/public/
          server-dir: ./staging/
          dangerous-clean-slate: true
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.DS_Store
            **/README.md
            **/.gitignore

  # 🧪 Run staging health checks
  staging-health-check:
    runs-on: ubuntu-latest
    needs: [deploy-backend-staging, deploy-frontend-staging]
    if: success()

    steps:
      - name: 🔍 Check staging backend health
        run: |
          sleep 30
          curl -f https://jungle-tours-backend-staging.fly.dev/api/version || exit 1

      - name: 🔍 Check staging frontend accessibility
        run: |
          curl -f -I https://staging.ayahuascapuertonarino.com/ | head -n 1 | grep -q "200\|301\|302" || exit 1

      - name: ✅ Staging deployment successful
        run: |
          echo "Staging deployment completed successfully!"
          echo "Backend: https://jungle-tours-backend-staging.fly.dev"
          echo "Frontend: https://staging.ayahuascapuertonarino.com"